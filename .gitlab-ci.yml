image: python:3.9

stages:
  - check
  - build
  - deploy
  - notify

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip

check-job:
  stage: check
  script:
    - make check

build-job:
  stage: build
  script:
    - make build
  artifacts:
    paths:
      - dist/*.whl
    expire_in: 30 days

deploy-job:
  stage: deploy
  script:
    - mkdir -p ~/.ssh
    - echo "${SSH_KEY}" > ~/.ssh/id_production
    - chmod 600 ~/.ssh/id_production
    - |
      cat >> ~/.ssh/config <<EOF
        Host production_host
          Hostname ${SSH_HOST}
          User ${SSH_USER}
          Port ${SSH_PORT}
          IdentityFile ~/.ssh/id_production
          StrictHostKeyChecking no
      EOF
    - |
      ssh production_host '
        sudo /bin/systemctl stop uwsgi.service &&
        cd ${DEPLOY_PATH} &&
        /usr/bin/git fetch &&
        /usr/bin/git reset --hard origin/master; \
        sudo /bin/systemctl start uwsgi.service
      '
  variables:
    SSH_HOST: $PROD_SSH_HOST
    SSH_PORT: $PROD_SSH_PORT
    SSH_USER: $PROD_SSH_USER
    SSH_KEY: $PROD_SSH_KEY
  environment:
    name: production
    url: https://jost.sh

.notify-job: &notify-job
  stage: notify
  script: |
    curl -s --form-string "token=${PUSHOVER_TOKEN}" \
      --form-string "title=${CI_USER} / ${CI_PROJECT}" \
      --form-string "user=${PUSHOVER_USER}" \
      --form-string "message=Pipeline run #${CI_ID} ${STATUS} for user
    ${CI_USER} on project '${CI_PROJECT}'." \
      https://api.pushover.net/1/messages.json
  variables: &notify-variables
    PUSHOVER_TOKEN: $PUSHOVER_TOKEN
    PUSHOVER_USER: $PUSHOVER_USER
    CI_USER: $GITLAB_USER_NAME
    CI_EMAIL: $GITLAB_USER_EMAIL
    CI_PROJECT: $CI_PROJECT_TITLE
    CI_STATUS: $CI_JOB_STATUS
    CI_ID: $CI_PIPELINE_IID

notify-success-job:
  when: on_success
  <<: *notify-job
  variables:
    <<: *notify-variables
    STATUS: succeeded

notify-failed-job:
  when: on_failure
  <<: *notify-job
  variables:
    <<: *notify-variables
    STATUS: FAILED
